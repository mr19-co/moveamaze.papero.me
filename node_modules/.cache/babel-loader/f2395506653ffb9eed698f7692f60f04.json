{"remainingRequest":"/home/max/WebstormProjects/moveamaze.papero.me/node_modules/babel-loader/lib/index.js!/home/max/WebstormProjects/moveamaze.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/home/max/WebstormProjects/moveamaze.papero.me/src/functions/PriorityQueue.js","dependencies":[{"path":"/home/max/WebstormProjects/moveamaze.papero.me/src/functions/PriorityQueue.js","mtime":1620921522099},{"path":"/home/max/WebstormProjects/moveamaze.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/max/WebstormProjects/moveamaze.papero.me/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/max/WebstormProjects/moveamaze.papero.me/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9tYXgvV2Vic3Rvcm1Qcm9qZWN0cy9tb3ZlYW1hemUucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvbWF4L1dlYnN0b3JtUHJvamVjdHMvbW92ZWFtYXplLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwoKLyoKY29uc3QgdG9wID0gMDsKY29uc3QgcGFyZW50ID0gaSA9PiAoKGkgKyAxKSA+Pj4gMSkgLSAxOwpjb25zdCBsZWZ0ID0gaSA9PiAoaSA8PCAxKSArIDE7CmNvbnN0IHJpZ2h0ID0gaSA9PiAoaSArIDEpIDw8IDE7CgpleHBvcnQgY2xhc3MgUHJpb3JpdHlRdWV1ZSB7CiAgICBjb25zdHJ1Y3Rvcihjb21wYXJhdG9yID0gKGEsIGIpID0+IGEgPiBiKSB7CiAgICAgICAgdGhpcy5faGVhcCA9IFtdOwogICAgICAgIHRoaXMuX2NvbXBhcmF0b3IgPSBjb21wYXJhdG9yOwogICAgfQogICAgc2l6ZSgpIHsKICAgICAgICByZXR1cm4gdGhpcy5faGVhcC5sZW5ndGg7CiAgICB9CiAgICBpc0VtcHR5KCkgewogICAgICAgIHJldHVybiB0aGlzLnNpemUoKSA9PT0gMDsKICAgIH0KICAgIHBlZWsoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX2hlYXBbdG9wXTsKICAgIH0KICAgIHB1c2goLi4udmFsdWVzKSB7CiAgICAgICAgdmFsdWVzLmZvckVhY2godmFsdWUgPT4gewogICAgICAgICAgICB0aGlzLl9oZWFwLnB1c2godmFsdWUpOwogICAgICAgICAgICB0aGlzLl9zaWZ0VXAoKTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gdGhpcy5zaXplKCk7CiAgICB9CiAgICBwb3AoKSB7CiAgICAgICAgY29uc3QgcG9wcGVkVmFsdWUgPSB0aGlzLnBlZWsoKTsKICAgICAgICBjb25zdCBib3R0b20gPSB0aGlzLnNpemUoKSAtIDE7CiAgICAgICAgaWYgKGJvdHRvbSA+IHRvcCkgewogICAgICAgICAgICB0aGlzLl9zd2FwKHRvcCwgYm90dG9tKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5faGVhcC5wb3AoKTsKICAgICAgICB0aGlzLl9zaWZ0RG93bigpOwogICAgICAgIHJldHVybiBwb3BwZWRWYWx1ZTsKICAgIH0KICAgIHJlcGxhY2UodmFsdWUpIHsKICAgICAgICBjb25zdCByZXBsYWNlZFZhbHVlID0gdGhpcy5wZWVrKCk7CiAgICAgICAgdGhpcy5faGVhcFt0b3BdID0gdmFsdWU7CiAgICAgICAgdGhpcy5fc2lmdERvd24oKTsKICAgICAgICByZXR1cm4gcmVwbGFjZWRWYWx1ZTsKICAgIH0KICAgIF9ncmVhdGVyKGksIGopIHsKICAgICAgICByZXR1cm4gdGhpcy5fY29tcGFyYXRvcih0aGlzLl9oZWFwW2ldLCB0aGlzLl9oZWFwW2pdKTsKICAgIH0KICAgIF9zd2FwKGksIGopIHsKICAgICAgICBbdGhpcy5faGVhcFtpXSwgdGhpcy5faGVhcFtqXV0gPSBbdGhpcy5faGVhcFtqXSwgdGhpcy5faGVhcFtpXV07CiAgICB9CiAgICBfc2lmdFVwKCkgewogICAgICAgIGxldCBub2RlID0gdGhpcy5zaXplKCkgLSAxOwogICAgICAgIHdoaWxlIChub2RlID4gdG9wICYmIHRoaXMuX2dyZWF0ZXIobm9kZSwgcGFyZW50KG5vZGUpKSkgewogICAgICAgICAgICB0aGlzLl9zd2FwKG5vZGUsIHBhcmVudChub2RlKSk7CiAgICAgICAgICAgIG5vZGUgPSBwYXJlbnQobm9kZSk7CiAgICAgICAgfQogICAgfQogICAgX3NpZnREb3duKCkgewogICAgICAgIGxldCBub2RlID0gdG9wOwogICAgICAgIHdoaWxlICgKICAgICAgICAgICAgKGxlZnQobm9kZSkgPCB0aGlzLnNpemUoKSAmJiB0aGlzLl9ncmVhdGVyKGxlZnQobm9kZSksIG5vZGUpKSB8fAogICAgICAgICAgICAocmlnaHQobm9kZSkgPCB0aGlzLnNpemUoKSAmJiB0aGlzLl9ncmVhdGVyKHJpZ2h0KG5vZGUpLCBub2RlKSkKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgIGxldCBtYXhDaGlsZCA9IChyaWdodChub2RlKSA8IHRoaXMuc2l6ZSgpICYmIHRoaXMuX2dyZWF0ZXIocmlnaHQobm9kZSksIGxlZnQobm9kZSkpKSA/IHJpZ2h0KG5vZGUpIDogbGVmdChub2RlKTsKICAgICAgICAgICAgdGhpcy5fc3dhcChub2RlLCBtYXhDaGlsZCk7CiAgICAgICAgICAgIG5vZGUgPSBtYXhDaGlsZDsKICAgICAgICB9CiAgICB9Cn0qLwpleHBvcnQgdmFyIFByaW9yaXR5UXVldWUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFByaW9yaXR5UXVldWUoY29tcGFyYXRvcikgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByaW9yaXR5UXVldWUpOwoKICAgIHRoaXMuX2NvbXBhcmF0b3IgPSBjb21wYXJhdG9yOwogICAgdGhpcy5fY29udGVudCA9IFtdOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFByaW9yaXR5UXVldWUsIFt7CiAgICBrZXk6ICJwdXNoIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwdXNoKGl0ZW0pIHsKICAgICAgdGhpcy5fY29udGVudC5wdXNoKGl0ZW0pOwogICAgfQogIH0sIHsKICAgIGtleTogInBvcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcG9wKCkgewogICAgICB2YXIgYmlnZ2VzdEluZGV4ID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fY29udGVudC5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICh0aGlzLl9jb21wYXJhdG9yKHRoaXMuX2NvbnRlbnRbaV0sIHRoaXMuX2NvbnRlbnRbYmlnZ2VzdEluZGV4XSkpIHsKICAgICAgICAgIGJpZ2dlc3RJbmRleCA9IGk7CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fY29udGVudFtiaWdnZXN0SW5kZXhdOwogICAgICB0aGlzLl9jb250ZW50ID0gdGhpcy5fY29udGVudC5maWx0ZXIoZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICByZXR1cm4gaSAhPT0gYmlnZ2VzdEluZGV4OwogICAgICB9KTsKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpc0VtcHR5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VtcHR5KCkgewogICAgICByZXR1cm4gdGhpcy5fY29udGVudC5sZW5ndGggPT09IDA7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUHJpb3JpdHlRdWV1ZTsKfSgpOw=="},{"version":3,"sources":["/home/max/WebstormProjects/moveamaze.papero.me/src/functions/PriorityQueue.js"],"names":["PriorityQueue","comparator","_comparator","_content","item","push","biggestIndex","i","length","result","filter","v"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAaA,aAAb;AACI,yBAAYC,UAAZ,EAAwB;AAAA;;AACpB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,QAAL,GAAgB,EAAhB;AACH;;AAJL;AAAA;AAAA,WAMI,cAAKC,IAAL,EAAW;AACP,WAAKD,QAAL,CAAcE,IAAd,CAAmBD,IAAnB;AACH;AARL;AAAA;AAAA,WAUI,eAAM;AACF,UAAIE,YAAY,GAAG,CAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,QAAL,CAAcK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAI,KAAKL,WAAL,CAAiB,KAAKC,QAAL,CAAcI,CAAd,CAAjB,EAAmC,KAAKJ,QAAL,CAAcG,YAAd,CAAnC,CAAJ,EAAqE;AACjEA,UAAAA,YAAY,GAAGC,CAAf;AACH;AACJ;;AAED,UAAME,MAAM,GAAG,KAAKN,QAAL,CAAcG,YAAd,CAAf;AAEA,WAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcO,MAAd,CAAqB,UAACC,CAAD,EAAIJ,CAAJ;AAAA,eAAUA,CAAC,KAAKD,YAAhB;AAAA,OAArB,CAAhB;AAEA,aAAOG,MAAP;AACH;AAvBL;AAAA;AAAA,WAyBI,mBAAU;AACN,aAAO,KAAKN,QAAL,CAAcK,MAAd,KAAyB,CAAhC;AACH;AA3BL;;AAAA;AAAA","sourcesContent":["/*\nconst top = 0;\nconst parent = i => ((i + 1) >>> 1) - 1;\nconst left = i => (i << 1) + 1;\nconst right = i => (i + 1) << 1;\n\nexport class PriorityQueue {\n    constructor(comparator = (a, b) => a > b) {\n        this._heap = [];\n        this._comparator = comparator;\n    }\n    size() {\n        return this._heap.length;\n    }\n    isEmpty() {\n        return this.size() === 0;\n    }\n    peek() {\n        return this._heap[top];\n    }\n    push(...values) {\n        values.forEach(value => {\n            this._heap.push(value);\n            this._siftUp();\n        });\n        return this.size();\n    }\n    pop() {\n        const poppedValue = this.peek();\n        const bottom = this.size() - 1;\n        if (bottom > top) {\n            this._swap(top, bottom);\n        }\n        this._heap.pop();\n        this._siftDown();\n        return poppedValue;\n    }\n    replace(value) {\n        const replacedValue = this.peek();\n        this._heap[top] = value;\n        this._siftDown();\n        return replacedValue;\n    }\n    _greater(i, j) {\n        return this._comparator(this._heap[i], this._heap[j]);\n    }\n    _swap(i, j) {\n        [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\n    }\n    _siftUp() {\n        let node = this.size() - 1;\n        while (node > top && this._greater(node, parent(node))) {\n            this._swap(node, parent(node));\n            node = parent(node);\n        }\n    }\n    _siftDown() {\n        let node = top;\n        while (\n            (left(node) < this.size() && this._greater(left(node), node)) ||\n            (right(node) < this.size() && this._greater(right(node), node))\n            ) {\n            let maxChild = (right(node) < this.size() && this._greater(right(node), left(node))) ? right(node) : left(node);\n            this._swap(node, maxChild);\n            node = maxChild;\n        }\n    }\n}*/\n\nexport class PriorityQueue {\n    constructor(comparator) {\n        this._comparator = comparator\n        this._content = []\n    }\n\n    push(item) {\n        this._content.push(item)\n    }\n\n    pop() {\n        let biggestIndex = 0\n        for (let i = 0; i < this._content.length; i++) {\n            if (this._comparator(this._content[i], this._content[biggestIndex])) {\n                biggestIndex = i\n            }\n        }\n\n        const result = this._content[biggestIndex]\n\n        this._content = this._content.filter((v, i) => i !== biggestIndex)\n\n        return result\n    }\n\n    isEmpty() {\n        return this._content.length === 0\n    }\n}"]}]}